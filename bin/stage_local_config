#!/usr/bin/env bash
#  Arquivo: stage_local_config
#  Autor: Bruno Franco
#  Ultima_modificacao: 18-01-2023
#  Download: git@github.com:brnfra
#  Licence:Este arquivo é de domínio público
#  Garantia: O autor não se responsabiliza por            eventuais danos
#            causados pelo uso deste arquivo.

local=$(pwd)
backupCopy="$HOME/backup/copiados"
DATE=$(date +%d/%m/%Y-%H:%M:%S)
SCRIPTS="$HOME/Documents/Projects/git/dotRepo/privateShell/scripts"
DOTFILES="$HOME/Documents/Projects/git/dotRepo/privateConfig"
DOTREPO="$HOME/Documents/Projects/git/dotRepo"
GITD="$HOME/Documents/Projects/git"
copyTo="$HOME/Documents/Projects/git/dotfiles"
bkpLog=".config-bkp/bkp.log"
#function for backup
sync_copy ()
{
    echo "
    |-----------------------------------------------
    Sincronização iniciada em $DATE " > ~/$bkpLog
    bashrc='.bashrc .bash/ '
    vimrc='.vimrc .config/nvim/ '
    vifmrc='.config/vifm/vifmrc .config/vifm/scripts/ .config/vifm/colors/ ' 
    terminalrc='.config/xfce4/terminal/terminalrc ' 
    # i3rc='.i3blocks.conf .config/i3/autostart/ .config/i3/ .config/i3/i3blocks/ '
    i3rc='.i3blocks.conf .i3/autostart/ .i3/ gi3/i3blocks/ '
    rofirc='.config/rofi/ .config/rofi/themes/'
    systemrc='.wgetrc .curlrc '
    gitrc='.gitconfig .git-completion.bash'
    comptonrc='.config/compton.conf .config/compton/ '
    tmuxrc='.tmux.conf '
    scripts='bin/ '

    for file in $bashrc; do
	echo "Files: $bashrc" &>> ~/$bkpLog
	newDir=$copyTo/$file
	mkdir -p "$(echo ${newDir%/*})" 
	rsync -va --exclude '*.backup' -b --backup-dir=$backupCopy  $HOME/$file $copyTo/$file &>> ~/$bkpLog
    done
    for file in $vimrc; do
	echo "Files: $vimrc"&>> ~/$bkpLog
	newDir=$copyTo/$file
	mkdir -p "$(echo ${newDir%/*})" 
	rsync -va  --exclude '*.backup' -b --backup-dir=$backupCopy  $HOME/$file $copyTo/$file &>> ~/$bkpLog
    done
    for file in $vifmrc; do
	echo "Files: $vifmrc"&>> ~/$bkpLog
	newDir=$copyTo/$file
	mkdir -p "$(echo ${newDir%/*})" 
	rsync -va --exclude '*.backup' -b --backup-dir=$backupCopy  $HOME/$file $copyTo/$file &>> ~/$bkpLog
    done
    for file in $terminalrc; do
	echo "Files: $terminalrc"&>> ~/$bkpLog
	newDir=$copyTo/$file
	mkdir -p "$(echo ${newDir%/*})" 
	rsync -va --exclude '*.backup' -b --backup-dir=$backupCopy  $HOME/$file $copyTo/$file &>> ~/$bkpLog
    done
    for file in $i3rc; do
	echo "Files: $i3rc"&>> ~/$bkpLog
	newDir=$copyTo/$file
	mkdir -p "$(echo ${newDir%/*})" 
	rsync -va --exclude '*.backup' -b --backup-dir=$backupCopy  $HOME/$file $copyTo/$file &>> ~/$bkpLog
    done
    for file in $rofirc; do
	echo "Files: $rofirc"&>> ~/$bkpLog
	newDir=$copyTo/$file
	mkdir -p "$(echo ${newDir%/*})" 
	rsync -va --exclude '*.backup' -b --backup-dir=$backupCopy  $HOME/$file $copyTo/$file &>> ~/$bkpLog
    done
    for file in $systemrc; do
	echo "Files: $systemrc"&>> ~/$bkpLog
	newDir=$copyTo/$file
	mkdir -p "$(echo ${newDir%/*})" 
	rsync -va --exclude '*.backup' -b --backup-dir=$backupCopy  $HOME/$file $copyTo/$file &>> ~/$bkpLog
    done
    for file in $gitrc; do
	echo "Files: $gitrc"&>> ~/$bkpLog
	newDir=$copyTo/$file
	mkdir -p "$(echo ${newDir%/*})" 
	rsync -va --exclude '*.backup' -b --backup-dir=$backupCopy  $HOME/$file $copyTo/$file &>> ~/$bkpLog
    done
    for file in $comptonrc; do
	echo "Files: $comptonrc"&>> ~/$bkpLog
	newDir=$copyTo/$file
	mkdir -p "$(echo ${newDir%/*})" 
	rsync -va --exclude '*.backup' -b --backup-dir=$backupCopy  $HOME/$file $copyTo/$file &>> ~/$bkpLog
    done
    for file in $tmuxrc; do
	echo "Files: $tmuxrc"&>> ~/$bkpLog
	newDir=$copyTo/$file
	mkdir -p "$(echo ${newDir%/*})" 
	rsync -va  --exclude '*.backup' -b --backup-dir=$backupCopy  $HOME/$file $copyTo/$file &>> ~/$bkpLog
    done
    for file in $scripts; do
	echo "Files: $scripts"&>> ~/$bkpLog
	newDir=$copyTo/$file
	mkdir -p "$(echo ${newDir%/*})" 
	rsync -va --exclude '*.backup' -b --backup-dir=$backupCopy  $HOME/$file $copyTo/$file &>> ~/$bkpLog
    done

}

#check branch
cd "$copyTo" || return
branch="$(git describe --all --exact-match HEAD | cut -d "/" -f 2 )";
hostname=$(hostname)

if [ "$hostname" = "debian-t100ta" ] || [ "$hostname" = "ubuntu-ideapad3" ] && [ "$branch" = "notebook-cfg" ]
then
    sync_copy
elif [ "$hostname" = "virtual" ] || [ "$hostname" = "debian-r5-desktop" ] && [ "$branch" = "main" ]
then
    sync_copy
fi

cd "$local" || return

if [ $? = 0 ]; then
    echo "Accomplished at $DATE &>> ~/$bkpLog
    -----------------------------------------------|" &>> ~/$bkpLog
else
    echo "A Error occured at $DATE" &>> ~/$bkpLog
fi
echo "If error occured check backup log: ~/$bkpLog"
