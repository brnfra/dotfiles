#!/usr/bin/env bash
# Arquivo: videostd
# Autor: Bruno Franco
# Ultima_modificacao: 15-03-2023
# Download: git@github.com:brnfra
# Licence:Este arquivo é de domínio público
# Garantia: O autor não se responsabiliza por eventuais danos
#           causados pelo uso deste script.
#to compact mp4 video files
# shellcheck source=~/bin/dotfiles_env
. dotfiles_env

backup="Backup_"
backup+=$(pwd | awk -F / '{print $NF}')
output="Output"
osys=$(echo /etc/os-release | sed -n -r '/^ID=/p' | cut -d "=" -f 2)
if [ "$osys" = "debian" ] || [ "$osys" = "ubuntu" ]; then
    video_list=$(find . -maxdepth 1 -type f -print0 \
	| xargs -0 file --mime-type \
	| awk /"video\/"/'{print}' \
	| cut -d ':' -f 1 )
else
    video_list=$(find . -maxdepth 1 -type f -print0 \
	| xargs -0 file --media-type \
	| awk /"video\/"/'{print}' \
	| cut -d ':' -f 1 )
fi
num_vid=$(echo "$video_list" | wc -l )
LOCAL=$(pwd)
if [ "$LOCAL" = "$HOME" ]; then
    printf "Script avoid execute in [%s] directory.\n" "$HOME"
    exit 1
fi
if [ "$num_vid" = "0" ]
then
    clnError "${LINENO}:There isn't video file."
    exit 1
else
    mkdir -p "$output";
    mkdir -p "$backup";
fi

clnInfo "Compacting mp4's(codec libx265) files"
if command -v ffmpeg &> /dev/null
then
    for file in $video_list
    do
	cInfo
	clnItalic "$file" "is the next:"
	#take the size
	du -b "$file" > oldsize
	OLDSIZE=$(echo oldsize | sed -e 's/[^0-9]//gi')
	if ffmpeg -i "$file" -c:v libx265 -crf 32 ./"$output"/"$file"
	then
	    wait $!
	else
	    continue
	fi
	cInfo 
	clnItalic "$output/$file" "created."

	du -b "./$output/$file" > newsize
	NEWSIZE=$(echo newsize | sed -e 's/[^0-9]//gi')
	if [[ $NEWSIZE -gt $OLDSIZE ]]
	then
	    if rm ./"$output"/"$file";
	    then
		wait $!
		cInfo
		clnItalic "./$output/$file" "deleted"
	    else
		cError "${LINENO}:Discart file"
		clnItalic "$file" 
		break
	    fi
	else
	    if mv "$file" ./"$backup";
	    then
		wait $!
		cInfo
		cItalic "$file" "copied to"
		clnItalic "$backup/" "folder"
		mv ./"$output"/"$file" ./"$file"
		clnInfo "New file substituted old file"
	    else
		cError "${LINENO}:Error when copy file" 
		clnItalic "$file" 
		break
	    fi
	fi
	echo
    done
fi
#Clean
rm -f newsize
rm -f oldsize
find . -type d -empty -delete
clnInfo "Finish."

