#!/usr/bin/env bash
# Arquivo: bare_merge
# Autor: Bruno Franco
# Ultima_modificacao: 12-11-2023
# Download: git@github.com:brnfra
# Licence:Este arquivo é de domínio público
# Garantia: O autor não se responsabiliza por eventuais danos
#           causados pelo uso deste script.
for file in ~/bin/{dotfiles_env,config_check,git_config,ssh_config,stage_config}; do
    [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;
#merge from updated branch
get_updates() 
{
    printf "[INFO]### %s beginning ### bare_merge ###\n" "${FUNCNAME[0]}" >> "$bkpLog"   
    cInfo "Get config from last updates(merge) to:" "merge recursive(theirs) from $branch"
    backto=$(pwd)
    #[1]
    if git_config checkout "$1" &>> "$bkpLog" && git_config fetch --all &>> "$bkpLog"; then
	git_config merge -s recursive -X theirs "$branch" &>> "$bkpLog" 
	if config_check tests ;then
	    cmOk "Files check"
	    sync_branch
	    commit_last "merge from $branch"
	    prepare
	else
	    cError "Files check tests on merge. Please see: " "$bkpLog"
	fi

	cInfo "Finish merge from branch" "$branch" "(--bare)"
	cmOk "Git merge"
    else
	cError "${LINENO}:Config checkout or fetch, error(logs):" "$bkpLog"     
    fi
    cd "$backto" || return
    printf "[INFO]### %s all done ### bare_merge ###\n" "${FUNCNAME[0]}" >> "$bkpLog"

}

case $1 in
    get_updates) "$@"; exit;;
esac 
