#!/usr/bin/env bash
# Arquivo: pull_config
# Autor: Bruno Franco
# Ultima_modificacao: 11-02-2023
# Download: git@github.com:brnfra
# Licence:Este arquivo é de domínio público
# Garantia: O autor não se responsabiliza por eventuais danos
#           causados pelo uso deste script.
local=$(pwd)

bkpdir="$HOME"/.config-bkp
dotfiles_dir="$HOME/Documents/Projects/git/dotfiles"
i3_cfg="$HOME/.i3/config"
i3_scpt="$HOME/bin/i3_config_install"
branch="main"

if [ -d "$bkpdir" ] 
then
    printf "[INFO] %s already exists.\n" "$bkpdir" 

else
    mkdir -p "$bkpdir"
    printf "[INFO] %s created.\n" "$bkpdir" 

fi

cd "$HOME" || return

function config {
    git --git-dir="$HOME"/.dotfiles/ --work-tree="$HOME" "$@" ; 
}

function cleanbkp {

    folders="$HOME "
    folders+="$HOME/.bash "
    folders+="$HOME/.config/nvim "
    folders+="$HOME/.config/vifm "
    folders+="$HOME/.config/vifm/scripts "
    folders+="$HOME/.config/vifm/colors "
    folders+="$HOME/.config/xfce4/terminal "
    folders+="$HOME/.i3 "
    folders+="$HOME/.i3/autostart  "
    folders+="$HOME/.i3/i3blocks "
    folders+="$HOME/.config/rofi "
    folders+="$HOME/.config/rofi/themes "
    folders+="$HOME/.config/ranger "
    folders+="$HOME/.config/ranger/rc.conf "
    folders+="$HOME/.config/ranger/scope.sh "
    folders+="$HOME/.config/ranger/devicons.py "
    folders+="$HOME/.config "
    folders+="$HOME/.config/compton "
    folders+="$HOME/bin "

    printf "[INFO] Moving files .backup to %s\n" "$bkpdir"
    for folder in $folders; do
	find $folder -maxdepth 1 -name "*.backup" -type f | xargs -I {} mv {} "$bkpdir"
    done
    printf "\r[INFO] Moving files .backup to %s: Done\n" "$bkpdir"

}

printf "[INFO] Git pull config %s(--bare):" "$branch"


if config pull origin $branch 
then
    printf "\r[INFO] Git pull config %s(--bare): Done\n" "$branch"

else
    printf "[ERROR] Checking again and backup files: Conflict.\n"
    config pull origin $branch 2>&1 | sed -r '/^\w/d;/\*/d' | awk '{print $1}' | xargs -I {} mv {} {}.backup
    printf "\r[ERROR] Checking again and backup files: Done         \n"

    if config pull origin $branch
    then
	cd "$local" || return
	printf "\r[INFO] Git pull config %s(--bare): All done. Exit\n" "$branch"

    else

	printf "\r[ERROR] Can't resolve conflicts. Trying to Fecth.   \n"
	printf "\r[INFO] Fetching origin %s.                            " "$branch"

	config fetch origin $branch
	printf "\r[INFO] Fetching origin %s. Done\n" "$branch"
	printf "[INFO] Reset --hard %s." "$branch"

	config reset --hard HEAD
	printf "\r[INFO] Reset --hard %s. Done		\n" "$branch"
	printf "[INFO] Merging origin %s." "$branch"

	config merge origin '@{u}'
	printf "\r[INFO] Merging origin %s. Done	  \n" "$branch"
	printf "[INFO] Checking again and backup files."

	config pull origin $branch 2>&1 | sed -r '/^\w/d;/\*/d' | awk '{print $1}' | xargs -I {} mv {} {}.backup
	printf "\r[INFO] Checking and backup files: Done      \n" 
    fi
fi

if [ -d "$bkpdir" ]; then
    cleanbkp
else
    printf "\r[ERROR]Can't clean .backup files. No %s found\n" "$bkpdir"
fi

if [ -f "$i3_cfg" ]; then
    printf "[INFO] I3config: OK\n"
elif [ -f "$i3_scpt" ]; then
    printf "[ERROR] I3config not found. Installing config file."
    "$HOME/bin/i3_config_install" "$bkpdir"
    printf "\r[ERROR] I3config file installed.                    \n"
else
    printf "\r[ERROR] I3config[%s] isn't installed and I3script[%s] not found.\n" "$i3_cfg" "$i3_scpt"
fi

printf "\r[INFO] Git Pull remote dotfiles branch to %s .\n" "$dotfiles_dir"
if [ -d "$dotfiles_dir" ];then
    cd "$dotfiles_dir" || return
    git checkout $branch
    git pull origin $branch
else
    printf "\r[ERROR]Can't locate %s .\n" "$dotfiles_dir"
fi

cd "$local" || return
printf "\r[INFO] Git pull config %s(--bare): All done. Exit\n" "$branch"
