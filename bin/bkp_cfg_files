#!/usr/bin/env bash
# Arquivo: bkp_cfg_files
# Autor: Bruno Franco
# Download: git@github.com:brnfra
# Licence:Este arquivo é de domínio público
# Garantia: O autor não se responsabiliza por eventuais danos
#           causados pelo uso deste script.
# shellcheck source=dotfiles_env
. dotfiles_env

sname="${0##*/}"

if [[ "$1" == "-h" || "$1" == "--help" ]]; then cat <<HELP
$sname 

NAME
    $sname - Backup my config files

SYNOPSIS
    $sname [-h] --help

DESCRIPTION
    A simple script to backup my config files copy to defined in dotfiles_env (~/bin/dotfiles_env) backup folder.

    -h, --help
	Print help informations

See the README for documentation.
https://github.com/brnfra/dotfiles
Licensed under the MIT license.
HELP
exit; fi

bkp_cfg_files() {
    local DIR_DATE=$(date '+%d_%m_%Y')
    printf "[INFO]### %s beginning ### backup config file ###\n" "${FUNCNAME[0]}" >> "$bkpLog" 
    cInfo "Backup config files:" "bkp_cfg_files"
    
    # bash
    files='.bashrc .bash/ '
    files+='README.md '
    # vim
    files+='.vimrc .config/nvim/ '
    # vifm
    files+='.config/vifm/vifmrc  '
    files+='.config/vifm/scripts/ '
    files+='.config/vifm/colors/ '
    # terminalrc=
    files+='.config/xfce4/terminal/terminalrc '
    # i3
    files+='.i3/ '
    files+='.i3/autostart/ '
    files+='.i3/i3blocks/ '
    # rofi
    files+='.config/rofi/ .config/rofi/themes/ '
    # gsimplecal
    files+='.config/gsimplecal/config '
    # systemrc
    files+='.wgetrc .curlrc  '
    # git
    files+='.gitconfig '
    files+='.git-completion.bash '
    # compton
    files+='.config/compton/ '
    # tmux
    files+='.tmux.conf '
    # scripts
    files+='bin/ '
    # test
    files+='tests/ '
    files+='test/ '
    for file in $files; do
	printf "[INFO] Files or folder to stage: (%s)\n" "$file" &>> "$bkpLog"
	newDir="${bkpdir}/${DIR_DATE}/${file}"
	mkdir -p "$(echo ${newDir%/*})"
	#rsync -va --exclude '*.backup' -b --backup-dir="$bkpdir"  "${HOME}/$file" "${newDir}/$file" \
	cp "${HOME}/$file" "${newDir}/$file" | sed '/^$/d;/./!d' &>> "$bkpLog"
	echo >>"$bkpLog"
    done
   
    printf "[INFO]%s all done at %s ### stage ###\n" "${FUNCNAME[0]}" "$DATE" >> "$bkpLog"

    # cInfo "Backup to files to" "$bkpdir"
    
    # clnInfo "Checking backup folders."
    # for Folder in $folders
    # do
	# if [ -d "$bkpdir/$Folder" ]
	# then
	    # cInfo "Folder" "$bkpdir/$Folder" "Already exists."
	# else
	    # mkdir -p "$bkpdir/$Folder"
	    # cInfo "Folder" "$bkpdir/$Folder" "Folders created."
	# fi
    # done
    
    # cmOk "Folders"

    # find "$HOME" -maxdepth 1 -name "*.backup" -type f | xargs -I {} mv {} "$bkpdir" &>> "$bkpLog"

    # for Folder in $folders; do
	# cInfo "Moving to:" "$bkpdir/$Folder"
	# if find "$HOME/$Folder" -maxdepth 1 -name "*.backup" -type f | xargs -I {} mv {} "$bkpdir/$Folder" &>> "$bkpLog"

	# then
	    # wait $!
	# else
	    # continue
	# fi

	# wait 
    # done

    # printf "[INFO]### %s all done ### backup config file ###\n" "${FUNCNAME[0]}" >> "$bkpLog"
}

"$@"
