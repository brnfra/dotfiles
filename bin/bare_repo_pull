#!/usr/bin/env bash
# Arquivo: bare_repo_pull
# Autor: Bruno Franco
# Ultima_modificacao: 05-11-2023
# Download: git@github.com:brnfra
# Licence:Este arquivo é de domínio público
# Garantia: O autor não se responsabiliza por eventuais danos
#           causados pelo uso deste script.
for file in ~/bin/{dotfiles_env,config_check,dirs_config,git_config,ssh_config,get_fonts,bkp_cfg_files}; do
	[ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

bare_repo_pull() {
    clnInfo "${0##*/}"
    backto=$(pwd)
    cd "$HOME" || return
    if git_config pull --rebase origin "$branch"
    then
	config_check

	cInfo "Git pull, branch" "$branch" "(--bare)"
	cmOk "Git pull"
    else
	cError "${LINENO}:Config pull error:" "Conflict."
	cInfo "Backup conflicts and try again"
	git_config pull origin $branch 2>&1 | sed -r '/^\w/d;/\*/d' | awk '{print $1}' | xargs -I {} mv "$HOME"/{} "$HOME"/{}.backup
	cmOk "Checking again and backup files"

	cInfo "Move .backup files to:" "$bkpdir"
	bkp_cfg_files 1>> "$bkpLog" 
	cmOk "Cleaning"

	if git_config pull --no-commit origin $branch
	then
	    config_check
	    cInfo "Git pull config, branch" "$branch" "(--bare)"
	    cmOk "Git pull"
	else
	    clnError "${LINENO}:Can't resolve conflicts. Trying to Fetch."

	    git_config fetch origin
	    cInfo "Fetching origin" 
	    cmOk "Git fetch"
	    
	    git_config reset --hard origin/"$branch" 
	    cInfo "Reset --hard:" "$branch" 
	    cmOk "Change reset hard HEAD"

	   #git_config merge origin '@{u}'
	   #cInfo "Mergin origin" "$branch" 
	   #cmOk "Merge origin"

	    cInfo "${LINENO}:Backup conflicts and try again"
	    git_config pull origin $branch 2>&1 | sed -r '/^\w/d;/\*/d' | awk '{print $1}' | xargs -I {} mv "$HOME"/{} "$HOME"/{}.backup
	    cmOk "Backup conflicts and try again"
	    config_check

	    bkp_cfg_files
	    cmOk "Clean"

	    if git_config pull origin $branch
		cInfo "Git pull finished." "Success" "Exit"
	    then
		cError "${LINENO}:Can't pull anyway .Exit with errors. Check:" "$bkpLog" " for more datails."
	    fi
	fi
    fi
    cd "$backto" || return
}


