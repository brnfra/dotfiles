#!/usr/bin/env bash
# Arquivo: install
# Autor: Bruno Franco
# Ultima_modificacao: 12-03-2023
# Download: git@github.com:brnfra
# Licence:Este arquivo é de domínio público
# Garantia: O autor não se responsabiliza por eventuais danos
#           causados pelo uso deste script.
# code providing by ;
#  - originally by user StreakyCobra in https://news.ycombinator.com/item?id=11070797
#  - in your wonderful tutorial, Nicola Paolucci, in https://www.atlassian.com/git/tutorials/dotfiles
backto=$(pwd)

install_check() {
    if [ -f "$HOME/bin/dotfiles_env" ]
    then
	# shellcheck source=~/bin/dotfiles_env
	. dotfiles_env
    else
	if curl -O --max-time 15  "https://raw.githubusercontent.com/brnfra/dotfiles/testing/bin/dotfiles_env"
	then
	    mkdir "$HOME/bin"
	    mv "$HOME/dotfiles_env" "$HOME/bin/"
	    # shellcheck source=~/bin/dotfiles_env
	    . dotfiles_env
	else
	    printf "[ERROR] dotfiles_env doesn't exist and can't download from repository. Exiting\n"
	    exit 1
	fi
    fi
    if [ -d "$install_dir" ]; then
	cError "Already instaled. If you trying reinstall, remove"
	clnItalic "$install_dir" "in order and check outputs log."

	exit 1
    fi
}

make_dirs() {
    folder_list="$HOME/.local/opt"
    folder_list+=" $HOME/.local/share/fonts"
    folder_list+=" $HOME/.wallpapers"
    folder_list+=" $HOME/.ssh"
    folder_list+=" $HOME/.cache"
    folder_list+=" $HOME/Documents/Projects/git"
    folder_list+=" $HOME/.vim/backups"
    folder_list+=" $HOME/.vim/backups/swaps"
    folder_list+=" $HOME/.vim/backups/undo"
    folder_list+=" $HOME/.vim/bundle"
    folder_list+=" $HOME/.vim/autoload"
    folder_list+=" $HOME/.config-bkp"

    clnInfo "Creating folders"
    for Folder in $folder_list
    do
	if [ -d "$Folder" ]
	then
	    cInfo
	    clnItalic "$Folder" "Already exists."
	else
	    mkdir -p "$Folder"
	    cInfo
	    clnItalic "$Folder" "Folders created."
	fi
    done
}

cd "$HOME" || return
install_check
make_dirs
cInfo "Git clone %s(--bare):"
clnItalic "$branch"

if git clone --branch "$branch" --bare "$repository" "$install_dir";
then
    cInfo "Git clone"
    cItalic "$branch" "(--bare)"
    cOk
    # shellcheck source=~/bin/bare_repo_checkout
    . bare_repo_checkout

    bare_repo_checkout
else
    clnError "Can't clone repository"
    exit 1
fi
