#!/usr/bin/env bash
# Arquivo: install
# Autor: Bruno Franco
# Ultima_modificacao: 12-03-2023
# Download: git@github.com:brnfra
# Licence:Este arquivo é de domínio público
# Garantia: O autor não se responsabiliza por eventuais danos
#           causados pelo uso deste script.
# code providing by ;
#  - originally by user StreakyCobra in https://news.ycombinator.com/item?id=11070797
#  - in your wonderful tutorial, Nicola Paolucci, in https://www.atlassian.com/git/tutorials/dotfiles
backto=$(pwd)

git_config() {
    git --git-dir="$install_dir" --work-tree="$HOME" "$@";
}
install_check() {
    if [ -f "$HOME/bin/dotfiles_env" ]
    then
	# shellcheck source=~/bin/dotfiles_env
	. dotfiles_env
    else
	if curl -O --max-time 15  "https://raw.githubusercontent.com/brnfra/dotfiles/testing/bin/dotfiles_env"
	then
	    mkdir "$HOME/bin"
	    mv "$HOME/dotfiles_env" "$HOME/bin/"
	    # shellcheck source=~/bin/dotfiles_env
	    . dotfiles_env
	else
	    printf "[ERROR] dotfiles_env doesn't exist and can't download from repository. Exiting\n"
	    exit 1
	fi
    fi
    if [ -d "$install_dir" ]; then
	cError "Already instaled. If you trying reinstall, remove"
	clnItalic "$install_dir" "in order and check outputs log."

	exit 1
    fi
}

bare_repo_checkout() {
    cInfo "Git checkout"
    clnItalic "$branch"
    if git_config checkout
    then
	cInfo "Checkout branch "
	cItalic "$branch" ":"
	cOk
	make_env
	cd "$backto" || return
	exit 0
    else
	cError "Checkout branch: backup files Template=[file_name.backup]"
	git_config checkout 2>&1 | sed -r '/^\w/d;/\*/d' | awk '{print $1}' | xargs -I {} mv "$HOME"/{} "$HOME"/{}.backup
	cmOk "Checkout branch, backup files"
	clnInfo "Checkout branch:Cleaning and trying again after backup"
	if git_config checkout
	then
	    cmOk "Checkout branch"
	    git_config config status.showUntrackedFiles no
	    cmOk "Install main(--bare)"
	    bkp_cfg_files
	    make_env
	    cd "$backto" || return
	    exit 0
	else
	    cError "Checkout branch: Exit with error."

	    if "$checkHome" > /dev/null;
	    then
		"$checkHome" | awk '/FAIL/''{print}'
		cInfo "Trying fix install. Removing"
		cItalic "$install_dir" "folder"
		rm -rf "$install_dir"
		cInfo "Installing again."
		if "$HOME/.config-bkp/install.backup"
		then
		    cd "$backto" || return
		    exit 0
		else
		    cd "$backto" || return
		    exit 1
		fi
	    fi
	fi
    fi
}

cd "$HOME" || return
install_check
cInfo "Git clone (--bare):"
clnItalic "$branch"

if git clone --branch "$branch" --bare "$repository" "$install_dir";
then
    cInfo "Git clone"
    cItalic "$branch" "(--bare)"
    cOk
    bare_repo_checkout
else
    clnError "Can't clone repository"
    exit 1
fi




