#!/usr/bin/env bash
# Arquivo: type_fold
# Autor: Bruno Franco
# Ultima_modificacao: 11-04-2025
# Download: git@github.com:brnfra
# Licence:Este arquivo é de domínio público
# Garantia: O autor não se responsabiliza por eventuais danos
#           causados pelo uso deste script.
#   Tem o proposito de organizar os arquivos que tem nome padrão começando com
#   o template name.type
#   cria pasta no padrão ./type/ e insere name.type nela 
#
# shellcheck source=dotfiles_env
. dotfiles_env

printf "Foldering files by type\n"

if [[ "$1" == "-h" || "$1" == "--help" ]]; then cat <<HELP
${0##*/}

NAME
    ${0##*/}  - Foldering files by type
	
SYNOPSIS
    ${0##*/} [local|-h] --help

DESCRIPTION
    Move files in current folder to new folders by type, inside current folder.
    local
	Move files to new path
    -h, --help
	Print help informations

See the README for documentation.
https://github.com/brnfra/dotfiles
Licensed under the MIT license.
HELP
exit; fi

filesByExt=$(find . -maxdepth 1 -type f -name '*.*' | sed 's|\.\/||gi')

saveIn=${1:-$(pwd)}
if ! [ -d $saveIn ]
then
    cError "Directory not found." "$Dir"
    exit 1
fi

foldering_by_type() {
    local Dir="$1"

    for File in $filesByExt
    do
	echo "${File##*'.'}" | sed 's/sh//gi' >> ext_list
    done
    ext_list=$(sort -u < ext_list)
    echo $ext_list
    if [ -s ext_list ]; then
	for Ext in $ext_list
	do
	    if [ "$HOME" != "$Dir" ]; then
		mkdir -p -v "$Dir/$Ext"
		find . -maxdepth 1 -type f -name "*.${Ext}" -exec mv -v -i {} "$Dir/$Ext" ';' 
	    else
		cError "Can't execute in home folder."
	    fi
	done
    fi
    rm ext_list
}

foldering_by_type "$saveIn"
cOk "Foldering by type"
find . -maxdepth 1 -type d -empty -delete  &> /dev/null
cOk "Cleaning empty folders"
