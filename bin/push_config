#!/usr/bin/env bash
#  Arquivo: push_config
#  Autor: Bruno Franco
<<<<<<< HEAD
#  Ultima_modificacao: 10-11-2023
||||||| parent of 92eb859 (refactor: update dotfiles dir or scripts)
#  Ultima_modificacao: 03-11-2023
=======
#  Ultima_modificacao: 05-11-2023
>>>>>>> 92eb859 (refactor: update dotfiles dir or scripts)
#  Download: git@github.com:brnfra
#  Licence:Este arquivo é de domínio público
#  Garantia: O autor não se responsabiliza por eventuais danos
#            causados pelo uso deste arquivo.
# shellcheck source=~/bin/dotfiles_env
for file in ~/bin/{stage_config,git_config,dotfiles_env}; do
    [ -r "$file" ] && [ -f "$file" ] && source "$file";
done;
unset file;

if [[ "$1" == "-h" || "$1" == "--help" ]]; then cat <<HELP
${0##*/}

NAME
    ${0##*/}  - Push config files from local to remote repo.

SYNOPSIS
    ${0##*/} [-h] --help

DESCRIPTION
    A simple script to push from local config files to remote repo config files.

    -h, --help
	Print help informations
Exit status: 
	 0      if OK,

	 1      git push local repo error.

	 2      stage_config error.


See the README for documentation.
https://github.com/brnfra/dotfiles
Licensed under the MIT license.
HELP
exit; fi

#push{{{
git_push() {
    #push
    message="${1:-"refactor: update dotfiles dir or scripts"}"
<<<<<<< HEAD
    git_repo add -A -v &>> "$bkpLog"
    git_repo commit -v -m "$message" &>> "$bkpLog"
    if git_repo push origin "$branch" &>> "$bkpLog"; then
	git status -sb &>> "$bkpLog"
	git status -sb 
	cmOk "Git add, commit and push"
||||||| parent of 92eb859 (refactor: update dotfiles dir or scripts)
    git add -A -v;git commit -v -m "$message";
    if git push origin "$branch"; then
	git status -sb
	cmOk "Git add and push"
=======
    git add -A -v;git commit -v -m "$message";
    if git push -u origin "$branch"; then
	git push
	git status -sb
	cmOk "Git add and push"
>>>>>>> 92eb859 (refactor: update dotfiles dir or scripts)
    else
	git status -sb &>> "$bkpLog"
	clnError "$?:error check git push logs to find out."
	exit 1
    fi

}
#}}}

#test, pull from remote repo to local and copy changes
printf "[INFO]%s beginning  ### push config ###\n" "${FUNCNAME[0]}"  > "$bkpLog"
backto=$(pwd)
cd "$dotfiles_dir" || return
cInfo "Push local to remote:" "push config"
git fetch --all &>> "$bkpLog"
if prepare "$1"; then
    cmOk "Stage and sync configs (bare/cloned) and update from last changes(pull repos) before push."
    git_push "$1" 
else
    printf "[ERROR] stage config error ###\n" >> "$bkpLog"
    clnError "$?:stage_config error."
    exit 2
fi
printf "[INFO]%s all done  ### push config  ###\n" "${FUNCNAME[0]}"  >> "$bkpLog"
cd "$backto" || return
