#!/usr/bin/env bash
# Copyright (C) 2014 Julien Bonjean <julien@bonjean.info>
# Copyright (C) 2014 Alexander Keller <github@nycroth.com>
# This program is free software: you can  red_bgistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
source ~/bin/dotfiles_env
#------------------------------------------------------------------------
font_bg_params_ok="$font $size $weight $green_bg $style"
font_bg_params_fail="$font $size $weight $color_on_bg $transform"
site_list='google.com' 
site_list+=' github.com' 
site_list+=' www.amazon.com.br'
#site_list+=' deb.debian.org'
errorCnt=$(( 0 ))
# resp1=$(curl -m 3 -I -s "$site1"  | awk '/HTTP/ { print $2 }')
# resp2=$(curl -m 3 -I -s "$site2"  | awk '/HTTP/ { print $2 }')
# Use the provided interface, otherwise the device used for the default route.
if [[ -n $BLOCK_INSTANCE ]]; then
    IF=$BLOCK_INSTANCE
else
    IF=$(ip route | awk '/^default/ { print $5 ; exit }')
fi
#------------------------------------------------------------------------
# As per #36 -- It is transparent: e.g. if the machine has no battery or wireless
# connection (think desktop), the corresponding block should not be displayed.
[[ ! -d /sys/class/net/${IF} ]] && exit
#------------------------------------------------------------------------
if [[ "$(cat /sys/class/net/$IF/operstate)" = 'down' ]]; then
    printf "%s\n" "<span $font_bg_params_fail > down </span>"
    exit 0;
fi
case $1 in
    -4)
	AF=inet ;;
    -6)
	AF=inet6 ;;
    *)
	AF=inet6? ;;
esac
# if no interface is found, use the first device with a global scope
IPADDR=$(ip addr show $IF | perl -n -e "/$AF ([^\/]+).* scope global/ && print \$1 and exit")
case $BLOCK_BUTTON in
    3) echo -n "$IPADDR" | xclip -q -se c ;;
esac
#------------------------------------------------------------------------
# by Adam Katz (stackoverflow)
errorCnt=$(( 0 ))
reach=$(( 0 ))
for Site in $site_list; do
    if nc -z -w 1 -O 1 $Site 80 && echo |openssl s_client -connect "$Site":80 2>&1 |awk '
	$1 == "SSL" && $2 == "handshake" { handshake = 1 }
	handshake && $1 == "Verification:" { ok = $2; exit }
	END { exit ok != "OK" }'
    then
	#cmOk "$Site" "Reached"
	reach=$(( reach + 1 ))
	if (( reach > 1 )); then
	    printf "%s\n" "<span $font_bg_params_ok > $IPADDR  </span>"
	    exit 0
	fi
    else
	#clnError "Can't reach: $Site"
	errorCnt=$(( errorCnt + 1 ))
	if (( errorCnt >= 2 )); then
	    printf "%s\n" "<span $font_bg_params_fail > $IPADDR  </span>"
	    exit 0
	fi
    fi
done

