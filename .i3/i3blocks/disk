#!/usr/bin/env bash
# Copyright (C) 2014 Julien Bonjean <julien@bonjean.info>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
# $ fc-list command to list fonts

font_face='"monofur NF"'
#xx-small , x-small , small , medium , large , x-large , xx-large , xxx-large.
font_size='"medium"'
color='"#00FF00"'
color_alert='"#FFA500"'
color_critic='"#FF0000"'
icon="&#xf233;"
DIR="${BLOCK_INSTANCE:-$HOME}"
alert_low="${1:-10}" # color will turn red under this value (default: 10%)
alert_high=$(( 80 )) # color will turn red up this value (default: 90%)
critic=$(( 90 )) # color will turn red up this value (default: 90%)
output=$(df -h -P -l "$DIR" | awk -v alert_low=$ALERT_LOW '
/\/.*/ {
	free=$4
	used=$3
	size=$2
	#percent
	use=$5 
}
END {
	printf "%.f%%", use; 
	exit 0
}
')
out_to_int=$(${output//\%/)} | bc)
if (( out_to_int < alert_high )); then
font_params="<span font=$font_face color=$color size=$font_size >$icon $output</span>"
      printf "%s%s\n"  "$font_params" "$BLOCK_INSTANCE"
elif (( out_to_int >= alert_high )) && (( out_to_int < critic )); then
font_alert_params="<span font=$font_face color=$color_alert size=$font_size >$icon $output</span>"
      printf "%s%s\n" "$font_alert_params" "$BLOCK_INSTANCE"
elif (( out_to_int >= critic )); then
font_critic="<span font=$font_face color=$color_critic font-weight='bold' size=$font_size >$icon $output</span>"
    printf "%s%s\n"  "$font_critic" "$BLOCK_INSTANCE"
fi  
