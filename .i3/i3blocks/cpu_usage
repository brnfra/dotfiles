#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
# Copyright 2014 Andreas Guldstrand <andreas.guldstrand@gmail.com>
# From: https://github.com/Anachron/i3blocks#
# Licensed under the terms of the GNU GPL v3, or any later version.
use strict;
use warnings;
use utf8;
use Getopt::Long;
use Term::ANSIColor;
# default values
my $color_norm  = $ENV{COLOR_ON} || "#2666A1";
my $color_warn  = $ENV{COLOR_ON} || "#FF0000";
my $color_crit  = $ENV{COLOR_ON} || "#FCCC00";
my $bg_color_norm = $ENV{BG_COLOR_ON} || "#080910";
my $bg_color_warn = $ENV{BG_COLOR_ON} || "#FCCC00";
my $bg_color_crit = $ENV{BG_COLOR_ON} || "#FF0000";

my $t_warn = 50;
my $t_crit = 80;
my $cpu_usage = -1;
sub help {
    print "Usage: cpu_usage [-w <warning>] [-c <critical>]\n";
    print "-w <percent>: warning threshold to become yellow\n";
    print "-c <percent>: critical threshold to become red\n";
    exit 0;
}
GetOptions("help|h" => \&help,
           "w=i"    => \$t_warn,
           "c=i"    => \$t_crit);
# Get CPU usage
$ENV{LC_ALL}="en_US"; # if mpstat is not run under en_US locale, things may break, so make sure it is
open (MPSTAT, 'mpstat 1 1 |') or die;
while (<MPSTAT>) {
    if (/^Average.*\s+(\d+\.\d+)/) {
        $cpu_usage = 100 - $1; # 100% - %idle
        last;
    }
}
close(MPSTAT);
$cpu_usage eq -1 and die 'Can\'t find CPU information';

#load average
my $LAVG1  = `cat /proc/loadavg | cut -d " " -f 1 | tr '\n' ' '`;
my $LAVG5  = `cat /proc/loadavg | cut -d " " -f 2 | tr '\n' ' '`;
my $LAVG15 = `cat /proc/loadavg | cut -d " " -f 3 | tr '\n' ' '`;
my $LAVGRZ = `cat /proc/loadavg | cut -d " " -f 4 | tr '\n' ' '`;
my $LPROSS = `cat /proc/loadavg | cut -d " " -f 5 | tr '\n' ' '`;
my $LPROSS_STR = 'ps -p ' . $LPROSS . '-o comm=';

$LPROSS_STR = `${LPROSS_STR} | tr '\n' ' '`;

$LAVG1 = $LAVG1*100; 
$LAVG5 = $LAVG5*100;
$LAVG15 = $LAVG15*100; 

# Print color, if needed
if (($cpu_usage < $t_crit && $cpu_usage >= $t_warn) || ($LAVG1 < $t_crit && $LAVG1 >= $t_warn) || ($LAVG5 < $t_crit && $LAVG5 >= $t_warn) || ($LAVG15 < $t_warn && $LAVG15 >= $t_warn) ) {
    printf "<span font='monofur NF' size='medium' color='%s' bgcolor='%s'>&#xf0e4; %.1f%% &#127947; (%.1f%%) (%s) </span>\n", $color_warn, $bg_color_warn , $cpu_usage, $LAVG1, $LAVGRZ;
    printf "<span font='monofur NF' size='medium' color='%s' bgcolor='%s'>&#xf0e4; %.1f%% &#127947; (%.1f%%) (%.1f%%) (%.1f%%) (%s) %s </span>\n", $color_warn, $bg_color_warn , $cpu_usage, $LAVG1, $LAVG5, $LAVG15, $LAVGRZ, $LPROSS_STR;
    exit 1
}
if (($cpu_usage >= $t_crit) || ($LAVG1 >= $t_crit) || ($LAVG5 >= $t_crit) || ($LAVG15 >= $t_crit) ) {
    printf "<span font='monofur NF' size='medium' color='%s' bgcolor='%s'>&#xf0e4; %.1f%% &#127947; (%.1f%%) (%s) </span>\n", $color_crit, $bg_color_crit ,  $cpu_usage, $LAVG1, $LAVGRZ;
    printf "<span font='monofur NF' size='medium' color='%s' bgcolor='%s'>&#xf0e4; %.1f%% &#127947; (%.1f%%) (%.1f%%) (%.1f%%) (%s) %s </span>\n", $color_crit, $bg_color_crit ,  $cpu_usage, $LAVG1, $LAVG5, $LAVG15, $LAVGRZ, $LPROSS_STR;
    exit 2
}

# Print short_text, full_text
printf "<span font='monofur NF'  size='medium' color='%s' bgcolor='%s'>&#xf0e4; %.1f%% &#127947; (%.1f%%) (%s) </span>\n",$color_norm ,$bg_color_norm ,  $cpu_usage, $LAVG1, $LAVGRZ;
printf "<span font='monofur NF'  size='medium' color='%s' bgcolor='%s'>&#xf0e4; %.1f%% &#127947; (%.1f%%) (%.1f%%) (%.1f%%) (%s) %s </span>\n",$color_norm ,$bg_color_norm ,  $cpu_usage, $LAVG1, $LAVG5, $LAVG15, $LAVGRZ, $LPROSS_STR;
exit 0;
