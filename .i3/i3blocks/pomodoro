<<<<<<< HEAD
#!/usr/bin/env bash
# Arquivo: pomodoro
# Autor: Bruno Franco
# Download: git@github.com:brnfra
# Licence:Este arquivo é de domínio público
# Garantia: O autor não se responsabiliza por eventuais danos
#           causados pelo uso deste arquivo.
# Thanks to [Original Author] duckl1ng/bog2n
# script from https://raw.githubusercontent.com/bog2n/i3blocks-pomodoro/master/pomodoro.sh
# repo: https://github.com/bog2n/i3blocks-pomodoro
source ~/.i3/i3blocks/vars

# Config variables (min)
work_time=25
work_time=$(( work_time * 60 ))
break_time=5
break_time=$(( break_time * 60 ))
pomos_counter=$(( 0 ))
counter_file="/tmp/pomos_counter"

#fonts awesomei ->  icons required
#ico_start="&#xf251;"
ico_start="&#xf251;"
ico_work="&#xf262;"
ico_break="&#xf0f4;"

break_alert="notify-send -t 3000 'Grab a tea'"
break_alert+=';ffplay -nodisp -autoexit /usr/share/sounds/freedesktop/stereo/complete.oga &> /dev/null' 
work_alert="notify-send -t 3000 'Time to work!'"
work_alert+=';ffplay -nodisp -autoexit /usr/share/sounds/freedesktop/stereo/alarm-clock-elapsed.oga &> /dev/null' 
pom_path="/tmp/pomodoro"
function display () {
    local min=$(( s / 60 ))
    local sek=$(( s % 60 ))
    local pomos_counter=$(cat $counter_file)
    if [ $min -eq 0 ]
    then
	min=00
    elif [ $min -lt 10 ]
    then
	min=0$min
    fi
    if [ $sek -lt 10 ]
    then
	sek=0$sek
    fi
    case $2 in
	w)
	    if [[ -e $counter_file ]];then
		echo "<span $font $yellow $size >$ico_work [$pomos_counter] $min:$sek</span>"
	    else
		echo "<span $font $yellow $size >$ico_work $min:$sek</span>"
	    fi
	    ;;
	b)
	    echo "<span $font $green $size >$ico_break [$pomos_counter] $min:$sek</span>"
	    ;;
    esac
}
#
function sum_pomos () {
    #TODO
    if [ -f $counter_file ]; then
	#TODO a day/week/month
	local pomos_counter=$(cat $counter_file)
	echo $(( pomos_counter + 1 )) > $counter_file
    else
	echo $(( pomos_counter + 1 )) > $counter_file
    fi
}
if [ -f $pom_path ] && [ $(wc -l $pom_path | awk '{print $1}') -eq 2 ]
then
    p=$(sed '1 d' $pom_path) # time
    t=$(sed '2 d' $pom_path) # mode
    case $t in
	w) dur=$work_time;;
	b) dur=$break_time;;
    esac 
    now=$(date +%s)
    s=$(( dur - now + p))
    if [ $s -le 0 ] # if time less than 0 then switch mode
    then
	case $t in
	    w)
		sum_pomos
		echo b > $pom_path
		eval $break_alert
		;;
	    b)
		echo w > $pom_path
		eval $work_alert
		;;
	esac
	echo $now >> $pom_path
    fi
    display $s $t
else
    if [[ -e $counter_file ]];then
	echo "<span $font $green $size >$ico_start[$(cat $counter_file)]</span>"
    else
	echo "<span $font $green $size $transform $style  >$ico_start</span>"
    fi
fi
case $BLOCK_BUTTON in
    1)
	if [ -f $pom_path ]; then # if file exists then stop reset timer
	    rm $pom_path
	else
	    echo w > $pom_path # else start timer
	    date +%s >> $pom_path
	fi
	;;
esac
||||||| empty tree
=======
#!/usr/bin/env bash
# Arquivo: pomodoro
# Autor: Bruno Franco
# Download: git@github.com:brnfra
# Licence:Este arquivo é de domínio público
# Garantia: O autor não se responsabiliza por eventuais danos
#           causados pelo uso deste arquivo.
# Thanks to [Original Author] duckl1ng/bog2n
# script from https://raw.githubusercontent.com/bog2n/i3blocks-pomodoro/master/pomodoro.sh
# repo: https://github.com/bog2n/i3blocks-pomodoro
source ~/.i3/i3blocks/vars

# Config variables (min)
work_time=30
work_time=$(( work_time * 60 ))
break_time=6
break_time=$(( break_time * 60 ))
pomos_counter=$(( 0 ))
counter_file="/tmp/pomos_counter"

#fonts awesomei ->  icons required
#ico_start="&#xf251;"
ico_start="&#xf251;"
ico_work="&#xf262;"
ico_break="&#xf0f4;"

break_alert="notify-send -t 3000 'Grab a tea'"
break_alert+=';ffplay -nodisp -autoexit /usr/share/sounds/freedesktop/stereo/complete.oga &> /dev/null' 
work_alert="notify-send -t 3000 'Time to work!'"
work_alert+=';ffplay -nodisp -autoexit /usr/share/sounds/freedesktop/stereo/alarm-clock-elapsed.oga &> /dev/null' 
pom_path="/tmp/pomodoro"
function display () {
    local min=$(( s / 60 ))
    local sek=$(( s % 60 ))
    local pomos_counter=$(cat $counter_file)
    if [ $min -eq 0 ]
    then
	min=00
    elif [ $min -lt 10 ]
    then
	min=0$min
    fi
    if [ $sek -lt 10 ]
    then
	sek=0$sek
    fi
    case $2 in
	w)
	    if [[ -e $counter_file ]];then
		echo "<span $font $orange $size >     $ico_work [$pomos_counter] $min:$sek     </span>"
	    else
		echo "<span $font $orange $size >     $ico_work $min:$sek     </span>"
	    fi
	    ;;
	b)
	    echo "<span $font $green $size >     $ico_break [$pomos_counter]  $min:$sek     </span>"
	    ;;
    esac
}
#
function sum_pomos () {
    #TODO
    if [ -f $counter_file ]; then
	#TODO a day/week/month
	local pomos_counter=$(cat $counter_file)
	echo $(( pomos_counter + 1 )) > $counter_file
    else
	echo $(( pomos_counter + 1 )) > $counter_file
    fi
}
if [ -f $pom_path ] && [ $(wc -l $pom_path | awk '{print $1}') -eq 2 ]
then
    p=$(sed '1 d' $pom_path) # time
    t=$(sed '2 d' $pom_path) # mode
    case $t in
	w) dur=$work_time;;
	b) dur=$break_time;;
    esac 
    now=$(date +%s)
    s=$(( dur - now + p))
    if [ $s -le 0 ] # if time less than 0 then switch mode
    then
	case $t in
	    w)
		sum_pomos
		echo b > $pom_path
		eval $break_alert
		;;
	    b)
		echo w > $pom_path
		eval $work_alert
		;;
	esac
	echo $now >> $pom_path
    fi
    display $s $t
else
    if [[ -e $counter_file ]];then
	echo "<span $font $white $size > $ico_start [$(cat $counter_file)] </span>"
    else
	echo "<span $font $white $size $transform $style  >    $ico_start     </span>"
    fi
fi
case $BLOCK_BUTTON in
    1)
	if [ -f $pom_path ]; then # if file exists then stop reset timer
	    rm $pom_path
	else
	    echo w > $pom_path # else start timer
	    date +%s >> $pom_path
	fi
	;;
esac
>>>>>>> 73aac843cbd85b5133698836c50b29330cbd7794
